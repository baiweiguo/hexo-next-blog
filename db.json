{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/love.js","path":"js/src/love.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/images/me.png","path":"images/me.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1484470065923},{"_id":"themes/next/.gitignore","hash":"9d8c5bf3c16e2b086c9b5f8e3c781a0eab809e55","modified":1486551402217},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1484470065923},{"_id":"themes/next/.javascript_ignore","hash":"74b54cf920cbbf4038a68e54b7138af8b8f45588","modified":1484470065925},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1484470065925},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1484470065925},{"_id":"themes/next/gulpfile.coffee","hash":"e549561461642051d195550ec49d793e44ee22a0","modified":1484470065928},{"_id":"themes/next/_config.yml","hash":"fc09423c636ede11e9f45d8b9db7a3ee79190a3b","modified":1486906645346},{"_id":"themes/next/package.json","hash":"48e2352f8e41f2b6bbf55254d10f3192ee206d5a","modified":1484470065950},{"_id":"themes/next/bower.json","hash":"bd70cf5988bbfc8cbcf13adae659151a55466524","modified":1484470065925},{"_id":"source/_posts/linux-attack-cmd.md","hash":"5202ddbc5592a13cbb327eaa915d2eb668d9b79c","modified":1487163712019},{"_id":"source/_posts/macro.md","hash":"886120052168feef3cdd6236723b1854143bcf43","modified":1487686050869},{"_id":"source/_posts/svm.md","hash":"ab63add544e063c4ae382509c51fc1a0468c3502","modified":1487072484781},{"_id":"source/giter/index.md","hash":"9d74124182d2184235cf9b9fb97625db2b0decf5","modified":1487071481065},{"_id":"source/categories/index.md","hash":"4cac54bfa6dd530a14cb82c016d7313fdedf5750","modified":1486554549991},{"_id":"source/_posts/yr-rules-scan-proc.md","hash":"1f101c9d9e8302b4453b4c05fc1b3119d55e5005","modified":1487158805146},{"_id":"source/_posts/hello-world.md","hash":"6f485e8c5f3f3de2fbb9c19c7ac3849bc2360d6c","modified":1486554549991},{"_id":"source/_posts/dns.md","hash":"2c78480bceab701d95a6b2508d679c4bd8d287b0","modified":1486554549960},{"_id":"themes/next/languages/default.yml","hash":"fe00529a94bb2550194a31d178f5810b45014ab6","modified":1484470065928},{"_id":"themes/next/languages/de.yml","hash":"db6a9d669f4b6282cda6c0a2d4e03d3e308a4846","modified":1484470065928},{"_id":"themes/next/languages/fr-FR.yml","hash":"91cf55b9d75879e72c8008d2659fe2ea993a4cca","modified":1484470065928},{"_id":"themes/next/languages/id.yml","hash":"d8b9dc017da0be7f71fda1cacd8064cbc38963b9","modified":1484470065928},{"_id":"themes/next/languages/ja.yml","hash":"bc89436a2a015ef72f43f265e56e37d94e73c0cd","modified":1484470065928},{"_id":"themes/next/languages/ko.yml","hash":"c59676f2af80c3c594c34c4a0fcbf65fd8864ff3","modified":1484470065930},{"_id":"source/tags/index.md","hash":"493c18959d9d382d1f193b647290715583452d85","modified":1486554549991},{"_id":"themes/next/languages/en.yml","hash":"d02acdce503c86fbb01920ad22d31ec56fc285f1","modified":1484470065928},{"_id":"source/_posts/auto-bak-hexo-blog.md","hash":"883736cce0b7cdd9c435030c39d778fcf0478e91","modified":1486559036320},{"_id":"themes/next/languages/pt.yml","hash":"f364905121a816c9797acce07c0a4f248965b29a","modified":1484470065930},{"_id":"themes/next/languages/ru.yml","hash":"402e676252ab1fc4522257a578738cb9536eb077","modified":1484470065930},{"_id":"themes/next/languages/zh-Hans.yml","hash":"439c16c744b1596f24d9e0b4e230c4d3c93b7d85","modified":1484488779680},{"_id":"themes/next/languages/zh-hk.yml","hash":"a59f3f3114f5eb4d170a76da4359307e8f5159a7","modified":1484470065930},{"_id":"themes/next/languages/pt-BR.yml","hash":"4b91f96b07e05705b28964df7460466c9b522e2c","modified":1484470065930},{"_id":"themes/next/languages/zh-tw.yml","hash":"18da1324d2212faca9a6e5e6ce98b419c86d4b0c","modified":1484470065930},{"_id":"themes/next/layout/_layout.swig","hash":"54a78832b34ccef8766c6e7d8ed2297a3d23302e","modified":1486482731388},{"_id":"themes/next/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1484470065948},{"_id":"themes/next/layout/index.swig","hash":"e5b52e04296203262a400e8e36ae12426d31fd5b","modified":1484470065950},{"_id":"themes/next/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1484470065950},{"_id":"themes/next/layout/page.swig","hash":"2a13804aa186f6062738d136e430870c53789bf4","modified":1484470065950},{"_id":"themes/next/scripts/merge-configs.js","hash":"f8cde6953939802f92da5b7a2458c6c539e9be69","modified":1484470065950},{"_id":"themes/next/layout/post.swig","hash":"b8334c479840b7724638eec71971cbd8512ae58d","modified":1484470065950},{"_id":"themes/next/layout/schedule.swig","hash":"595013860078799d455af4965b3a7c5c4fd3923c","modified":1484470065950},{"_id":"themes/next/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1484470065950},{"_id":"source/_posts/static-class-func-var.md","hash":"0e82a62446e837b43b0fc690bda4e1829421a7d9","modified":1486554549991},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1484470066035},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1484470066035},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1484470066035},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484470065983},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1484470065933},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1484470065933},{"_id":"themes/next/layout/_partials/comments.swig","hash":"05b14c2330758bfbbe34ce68225c98e4f8ae0de5","modified":1486483562979},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1484470065935},{"_id":"themes/next/layout/_partials/footer.swig","hash":"b1eed15b5c2ee552c25c5374f81e034a65450b18","modified":1486478016493},{"_id":"themes/next/layout/_partials/head.swig","hash":"740684ef2b6e56183529387882042612e904bc8d","modified":1484470065935},{"_id":"themes/next/layout/_partials/header.swig","hash":"9b185aa139b96e51ac39d1bb9cb3acb9becc09d0","modified":1486478203791},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1484470065938},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"dfbb6e9692333166aa78231ad12b2a40c153cbcb","modified":1484470065938},{"_id":"themes/next/layout/_partials/search.swig","hash":"952b7b8d9ce2c81d4002a9dc2331f1e710f99616","modified":1486477985507},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1484470065940},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1484470065940},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1484470065940},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"6d40652784585d263c37b8a3723e43e04b926ca7","modified":1484470065933},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1484470065933},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1484470065935},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"e9beddda9758d8739c41fc8c67b2e72fc29c1244","modified":1484470065948},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1484470065953},{"_id":"themes/next/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1484470065953},{"_id":"themes/next/scripts/tags/note.js","hash":"7dc14db08f2c74f8f1952534b424f220f5c000c6","modified":1484470065953},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1484470065953},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1484470065953},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1486517965554},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"d306d61fc1a87f1145414d77f6e09eba6f7901a3","modified":1486627711946},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1484470065985},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1484470065985},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1484470065985},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1484470065985},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1484470065988},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1484470065988},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1484470065988},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1484470065988},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1484470065985},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1484470065985},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1484470065988},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1484470065988},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1484470065988},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1484470065988},{"_id":"themes/next/layout/_macro/post.swig","hash":"216907a1348317114ccb90fecc752b8b7255b15b","modified":1484490109936},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484470065940},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484470065943},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484470065973},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484470065975},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484470065983},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484470065975},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484470065983},{"_id":"source/_posts/dns/abc0000000001.png","hash":"38e2648ce22631ff411f368c825a0c9c357983ef","modified":1486554549975},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1484470065933},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"bb2c3a926bb7f8fea54d424882b25d93dfde7ae6","modified":1484470065933},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1484470065935},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1484470065935},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"efa7efcbb575381b508f9aa0e0c53140eef72a7b","modified":1484470065938},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1484470065938},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1484470065938},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1484470065940},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1484470065940},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1484470065940},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1484470065940},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"188423f7df0eb8c99a03cb6741384415651c4665","modified":1484470065943},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"4f9efb15c9aaa016ac78d9f8aa2caefea87869df","modified":1484470065945},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"f592adff22628b271ec9657b080cf6b9cc200615","modified":1484470065948},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1484470065948},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1484470065948},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1484470065948},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1484470065940},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1484470065948},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1484470065943},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1484470065973},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1484470065975},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1484470065975},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1484470065983},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c666e352c3b8e4ad0a16cc757b08f44ef9172182","modified":1484470065983},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1484470065990},{"_id":"themes/next/source/css/_variables/base.styl","hash":"8b08a5ce4222aa731b180a12127bd0e52d12ede8","modified":1484470065983},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"4a0da1bed19e65bd7db42421b447061bc1618710","modified":1484470065990},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1484470065990},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"84bdc8a4fe127849a5c99bdefe1d0b65ee1a4a0a","modified":1484470065990},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1484470065990},{"_id":"themes/next/source/js/src/post-details.js","hash":"458af3b1bd7783c1950808e66cedfa9fb68bf21f","modified":1484470065990},{"_id":"themes/next/source/js/src/love.js","hash":"effa770d8085f7e7fb903de217ce521dff163780","modified":1486482926537},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1484470065993},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1484470065998},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1484470065998},{"_id":"themes/next/source/js/src/utils.js","hash":"e34f83848883732ddd7a34a3e3ed2a293f0f76a7","modified":1484470065993},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"8868275e8b6340c87a81c69a54ed138d11fb3c3e","modified":1484470066008},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1484470066008},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1484470066008},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1484470066008},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1484470066008},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1484470065993},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1484470065998},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1484470066028},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1484470066028},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1484470066028},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1484470066028},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1484470066005},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1484470066005},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1484470066005},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1484470066028},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1484470066005},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1484470066028},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1484470066025},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1484470066030},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1484470066030},{"_id":"themes/next/source/images/me.png","hash":"bfdd5fa115be9e53a5105f02f33b08a1d9540d84","modified":1487159225988},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1484470066033},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1484470066033},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1484470066033},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1484470065943},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"24105e62d7f26946907fa14cd02589f899bf8122","modified":1484470065943},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1484470065943},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1484470065943},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"1b6af02fd0ba3f729675cd95429a0cea4aebf358","modified":1484470065945},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1484470065943},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1484470065945},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"e4a13e8cd19762ef3aea0e59dfae8b3c1f251f11","modified":1484470065945},{"_id":"themes/next/layout/_scripts/third-party/comments/gentie.swig","hash":"0f38f053841ef77cdce56a84cfbb4dd4c3329486","modified":1484470065945},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1484470066025},{"_id":"themes/next/layout/_scripts/third-party/comments/youyan.swig","hash":"f40a697fd046415924a142eec1effad70f3cb187","modified":1484470065945},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1484470065945},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1484470065945},{"_id":"source/_posts/dns/abc0000000004.png","hash":"5368d43a2c54a51e036f383f306f08625000b96b","modified":1486554549975},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ad69cbf94eedacc27e756cdb9c7073416db697d0","modified":1484470065953},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1484470065953},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1484470065953},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"b7d5cc29586ac796a50d90974ad99d24a5982137","modified":1484470065955},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1484470065960},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1484470065968},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1484470065970},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5a35aa0381b0e1d465b952a997194441020446ea","modified":1484470065973},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"b6ee5fefa6046086a76ddbcfafc82482816fa3e0","modified":1484470065973},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1484470065973},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1484470065975},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1484470065973},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1484470065975},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1484470065975},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1484470065973},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1484470065978},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1484470065975},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"ce272226a1570f5f7c70243b751a5b0fe1671a88","modified":1484470065975},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1484470065978},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1484470065980},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1484470065980},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1484470065980},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"34acb45007229b299951ce35d8eef642ea16fbe9","modified":1484470065980},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1484470065978},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1484470065980},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"221d3dbc04ff6c211ba9382397c4977e9f493153","modified":1484470065980},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1484470065983},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"173f3aa31c41782591b7abeadd4f88f68d59b042","modified":1484470065980},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1484470065978},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"1be4ef3f97f329e2531bfd2dfdc40c0e46df35c8","modified":1484470065983},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"c2390263a298a2b78c5f941e6827c13f02e1ee85","modified":1484470065993},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1484470065998},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1484470065998},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1484470066000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1484470066000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1484470066000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1484470066003},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1484470065998},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1484470066005},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1484470066003},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"a02674d823c7b577d38c3cdb91953993b6e4b3a0","modified":1484470066008},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1484470066010},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"3c1d63dd1176c77f9f4cdb1616fbb08c31b9822f","modified":1484470066010},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1484470066008},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1484470066030},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1484470066030},{"_id":"source/_posts/dns/abc0000000003.png","hash":"618dc843c235e3b7c317bc99c88048ef361bab43","modified":1486554549975},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1484470066005},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1484470066018},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1484470066018},{"_id":"source/_posts/dns/abc0000000000.png","hash":"2b8cb958634390187577c5a4cef8f385d989e910","modified":1486554549975},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1484470066023},{"_id":"source/_posts/dns/abc0000000002.png","hash":"5a56f151e6035917c79b59e8643acfb4532e104a","modified":1486554549975},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1484470066025},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1484470066033},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1484470065955},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1484470065955},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1484470065955},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"852fd77500bda2c1a6651a14aa48d7d6222adc9d","modified":1484470065955},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1484470065955},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1484470065958},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1484470065955},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1484470065958},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1484470065958},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1484470065958},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1484470065958},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"cd2def16d31feb234be27dcdce2a919f70cc6919","modified":1484470065958},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"0d9a4ae2e4ab418453e0f81b8fb1ad4b856f91d4","modified":1484470065960},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1484470065958},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1484470065960},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1484470065960},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1484470065958},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1484470065960},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"4866fb9453d7d4c83a1c4e55d74e4afed336eb8b","modified":1484470065960},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1484470065963},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"e28c805011f65b54060f03be90ec5a23714c4985","modified":1484470065963},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1484470065965},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"74e9989a10fc682388cbd25ff7df0d7d4025fb8c","modified":1484470065963},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1484470065963},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1484470065965},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"821991c0890966a512b43e8b1cf9537e738a09a0","modified":1484470065965},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1484470065965},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1484470065963},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1484470065965},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"06b9a99d63b4d57fdbf70b88ab7036fbc47e3f52","modified":1484470065965},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"011d5828b4972b2df0b429794b4466ba5bc1b49e","modified":1484470065965},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1484470065968},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"eb5de3b67fe4753e93de448eb8357bc69aa90929","modified":1486483808525},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1484470065968},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1484470065968},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1484470065965},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"c8a05ce90784db9744c22fab22019eb637df1f2f","modified":1484470065968},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1484470065968},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1484470065970},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"7f7e9df15148608a9c29326dd880d8e8e8efc0ec","modified":1484470065970},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"8420b4be386469337243336aee694297875bd439","modified":1484470065968},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"cd526e814f9323a79fe835085d64867d34b3715d","modified":1484470065970},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1484470065970},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"3b1aabbab57b0b1fafa311feb1212f59e78e7928","modified":1484470065968},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"dc944a01dd59f5ed2d44bb22fdb21fc3f455948f","modified":1484470065970},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"eb4ede7d7446d8a2f2ddeef3b17f497a6ad30756","modified":1484470065970},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1484470065970},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1484470065978},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1484470065978},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1484470065968},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1484470065980},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1484470066000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1484470066000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1484470066000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1484470066003},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1484470066003},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1484470066003},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1484470066023},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1484470065995},{"_id":"source/_posts/yr-rules-scan-proc/abc0000000006.png","hash":"66729ea5e1743e29193cd4d855fad16e9f3e4412","modified":1487157432266},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"964e8dac2cee79c4b49b5bc300675773f6518812","modified":1484470066020},{"_id":"source/_posts/dns/abc0000000005.png","hash":"6bd162635d39bf35bec095e5a6bea0b7f07a5ba6","modified":1486554549991},{"_id":"public/baidusitemap.xml","hash":"a5cf2f575045e61943f8d5273027bdb37920dc58","modified":1487686099854},{"_id":"public/atom.xml","hash":"7481594748510712a80fe077b35b8d275f09e550","modified":1487686100066},{"_id":"public/search.xml","hash":"92f7c1a82b45fed66e0ef59132d2f94965538e52","modified":1487686100067},{"_id":"public/sitemap.xml","hash":"eed56c06e882480d1c97014dcd0dbe69f949801f","modified":1487686100067},{"_id":"public/giter/index.html","hash":"8732fc8bd08c1c256d82ba6e1019ceb0a4e26de8","modified":1487686101758},{"_id":"public/categories/index.html","hash":"5157474d2e0d8067d9a404939bf3f027cb0742b6","modified":1487686101765},{"_id":"public/2017/02/21/macro/index.html","hash":"d8a4e79bb1c1e31d1a74059283dfa05ffc3749d6","modified":1487686102006},{"_id":"public/2017/02/15/linux-attack-cmd/index.html","hash":"087d0d6c0c0dd7b148ae683ae6a3210591d923fb","modified":1487686102008},{"_id":"public/tags/index.html","hash":"7a2d3c4a9fc4709a87bcf413367f155a8f217ea6","modified":1487686102008},{"_id":"public/2017/02/08/auto-bak-hexo-blog/index.html","hash":"7f117c0350d6a1d964268a62cd5560adc40e28cc","modified":1487686102008},{"_id":"public/2017/02/08/hello-world/index.html","hash":"acadcf07e6f7f0245179fb9706d2d321696b2a15","modified":1487686102008},{"_id":"public/2017/02/07/static-class-func-var/index.html","hash":"259b69817b95bd38590750fc071ec3bf79a3d298","modified":1487686102008},{"_id":"public/2017/02/06/dns/index.html","hash":"48c748fd9321c636092359c14eabf314d0328b06","modified":1487686102008},{"_id":"public/archives/index.html","hash":"1803d25dc2396c0ba4e9fd89f8fa55e7439423d1","modified":1487686102008},{"_id":"public/archives/2017/index.html","hash":"0e3a7e8703267ad4155adc931600772e1c12289c","modified":1487686102008},{"_id":"public/archives/2017/02/index.html","hash":"3fd3563d252c9f403e3c81590dbd0d531b2fc70b","modified":1487686102008},{"_id":"public/categories/c/index.html","hash":"493b7196d54a847618f8d880bb5be82435b9f364","modified":1487686102008},{"_id":"public/categories/machine-learning/index.html","hash":"411639b561bb23c1fb5cf17c4f89739a997925ab","modified":1487686102009},{"_id":"public/categories/C/index.html","hash":"b7a28a7bda05a4f4266a82d328eedb629107a67c","modified":1487686102009},{"_id":"public/categories/network/index.html","hash":"904e086627dab91f195dd2c31207d363bafc73b2","modified":1487686102009},{"_id":"public/categories/hexo/index.html","hash":"a89210bb112b9cb61c5b91caf613082e35deb0ed","modified":1487686102009},{"_id":"public/index.html","hash":"e070e3942f635fe0f13cdcb2caed8ef03e8943f2","modified":1487686102009},{"_id":"public/tags/c/index.html","hash":"eef9ed0448d76b1bd853b2e658f84993f1be5966","modified":1487686102009},{"_id":"public/tags/svm/index.html","hash":"339feddddf7edc6e03084cef6baa93e074708528","modified":1487686102009},{"_id":"public/tags/math/index.html","hash":"2aade61870cfdc3fcd0591c563dff19400ccfec6","modified":1487686102009},{"_id":"public/tags/machine-learning/index.html","hash":"4044494137f4cb8ec25b47cd0c28f5f8c244b0cc","modified":1487686102009},{"_id":"public/tags/C/index.html","hash":"59c3eb5dee68c4c6d47db3ed5d95275692979de0","modified":1487686102009},{"_id":"public/tags/yara/index.html","hash":"76fb28bd8dd71b8b14ad60eb99b5c69e2bcfc3c1","modified":1487686102009},{"_id":"public/2017/02/14/svm/index.html","hash":"3ff985c3bd7760d642e6f6331983015407ccfb05","modified":1487686102009},{"_id":"public/tags/api/index.html","hash":"12cdccae101294b2ab79d34b1d78be232bf65472","modified":1487686102009},{"_id":"public/2017/02/14/yr-rules-scan-proc/index.html","hash":"657a0b5176eeaae32d7023d772168253c86f0209","modified":1487686102009},{"_id":"public/tags/domain/index.html","hash":"c983bc81d66e0ce707511e75a389bc156cea957e","modified":1487686102010},{"_id":"public/tags/dns/index.html","hash":"fca33a7c9b9a898bf2c6ad5082c06087b0ed3a1a","modified":1487686102010},{"_id":"public/tags/hexo/index.html","hash":"4284834360f19472c3fa6a6c28777b7caeda4e20","modified":1487686102010},{"_id":"public/tags/proc/index.html","hash":"8ba7ea69d7b5ae0e972feee711b994d6cae41d01","modified":1487686102010},{"_id":"public/tags/static/index.html","hash":"decebcb16557e53a1aa1e528a23669d1cee20ab6","modified":1487686102010},{"_id":"public/categories/linux/index.html","hash":"8030962bccea65fa6fd5a2e66f3bc9d9b10596f4","modified":1487686102012},{"_id":"public/tags/linux/index.html","hash":"74a60c5ae9cb2cf06d1e64fdb2ed79b2b7ed6cda","modified":1487686102012},{"_id":"public/tags/shell/index.html","hash":"3ee0281e4aa48bf54b02ef45e59b1696191be7ef","modified":1487686102012},{"_id":"public/tags/attack/index.html","hash":"e9b56e1331bc54eb9f1c77b3f7e07e6f1e386fd2","modified":1487686102012},{"_id":"public/tags/macro/index.html","hash":"4bd2815efbb7e383f5cb7a950ece44ef275d5393","modified":1487686102012}],"Category":[{"name":"linux","_id":"cizfltmid00048wyviz42gpxs"},{"name":"c","_id":"cizfltmj9000a8wyvzy76k6uz"},{"name":"machine learning","_id":"cizfltmjj000f8wyvjvpc0dtn"},{"name":"C","_id":"cizfltmjn000j8wyvz9i9h51u"},{"name":"network","_id":"cizfltmjp000o8wyvnv0mm5mk"},{"name":"hexo","_id":"cizfltmjs000s8wyvehdzaexp"},{"name":"c++","_id":"cizfltmju000x8wyvigf121wz"}],"Data":[],"Page":[{"title":"giter","date":"2017-02-09T08:45:07.000Z","mathjax":true,"_content":"","source":"giter/index.md","raw":"---\ntitle: giter\ndate: 2017-02-09 16:45:07\nmathjax: true\n---\n","updated":"2017-02-14T11:24:41.065Z","path":"giter/index.html","comments":1,"layout":"page","_id":"cizfltmi400018wyvktt845bg","content":"","excerpt":"","more":""},{"title":"categories","date":"2017-02-07T13:40:50.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-02-07 21:40:50\ntype: \"categories\"\ncomments: false\n---\n","updated":"2017-02-08T11:49:09.991Z","path":"categories/index.html","layout":"page","_id":"cizfltmi900038wyvrle76q8t","content":"","excerpt":"","more":""},{"title":"tags","date":"2017-02-07T13:39:48.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-02-07 21:39:48\ntype: \"tags\"\ncomments: false\n---\n","updated":"2017-02-08T11:49:09.991Z","path":"tags/index.html","layout":"page","_id":"cizfltmj000078wyvsimcxaaq","content":"","excerpt":"","more":""}],"Post":[{"title":"linux下简单shell攻击命令","date":"2017-02-15T12:55:02.000Z","_content":"\n\n### 发包命令\n* udp发包命令：exec 3<>/dev/udp/ip/port; echo -e \"test abc\" >&3 // 发一个udp包\n* tcp发包命令：exec 3<>/dev/tcp/ip/port;  // 发一个syn包\n","source":"_posts/linux-attack-cmd.md","raw":"---\ntitle: linux下简单shell攻击命令\ndate: 2017-02-15 20:55:02\ntags: [linux, shell, attack]\ncategories: linux\n---\n\n\n### 发包命令\n* udp发包命令：exec 3<>/dev/udp/ip/port; echo -e \"test abc\" >&3 // 发一个udp包\n* tcp发包命令：exec 3<>/dev/tcp/ip/port;  // 发一个syn包\n","slug":"linux-attack-cmd","published":1,"updated":"2017-02-15T13:01:52.019Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizfltmhy00008wyvvqittp5i","content":"<h3 id=\"发包命令\"><a href=\"#发包命令\" class=\"headerlink\" title=\"发包命令\"></a>发包命令</h3><ul>\n<li>udp发包命令：exec 3&lt;&gt;/dev/udp/ip/port; echo -e “test abc” &gt;&amp;3 // 发一个udp包</li>\n<li>tcp发包命令：exec 3&lt;&gt;/dev/tcp/ip/port;  // 发一个syn包</li>\n</ul>\n","excerpt":"","more":"<h3 id=\"发包命令\"><a href=\"#发包命令\" class=\"headerlink\" title=\"发包命令\"></a>发包命令</h3><ul>\n<li>udp发包命令：exec 3&lt;&gt;/dev/udp/ip/port; echo -e “test abc” &gt;&amp;3 // 发一个udp包</li>\n<li>tcp发包命令：exec 3&lt;&gt;/dev/tcp/ip/port;  // 发一个syn包</li>\n</ul>\n"},{"title":"C语言位运算","date":"2017-02-21T10:47:54.000Z","_content":"\n\n```C\n#define COMM_BIT_SET(a,b)     ((a) |= (1<<(b)))   // 将 a 的 b 位置1（1左移b位）\n#define COMM_BIT_CLR(a,b)     ((a) &= ~(1<<(b)))  // 将 a 的 b 位清零\n#define COMM_BIT_GET(a,b)     (!!((a) & (1<<(b)))) // 判断 a的b位是否置1 （!!用于将正数转为0或1）\n```\n<!-- more -->\nCOMM_BIT_SET与COMM_BIT_GET通常组合使用：\n\n```C\nenum {\n  TEST1 = 1,\n  TEST2 = 2,\n};\n\nint i = 0;\nCOMM_BIT_SET(i, TEST1);\ncout<< COMM_BIT_GET(i, TEST1) <<endl;  // true\ncout<< COMM_BIT_GET(i, TEST2) <<endl;  // false\n\nCOMM_BIT_SET(i, TEST2);\ncout<< COMM_BIT_GET(i, TEST1) <<endl;  // false\ncout<< COMM_BIT_GET(i, TEST2) <<endl;  // true\n\n```\n更多，[参见](http://imhuchao.com/423.html)\n","source":"_posts/macro.md","raw":"---\ntitle: C语言位运算\ndate: 2017-02-21 18:47:54\ntags: [c, macro]\ncategories: c\n---\n\n\n```C\n#define COMM_BIT_SET(a,b)     ((a) |= (1<<(b)))   // 将 a 的 b 位置1（1左移b位）\n#define COMM_BIT_CLR(a,b)     ((a) &= ~(1<<(b)))  // 将 a 的 b 位清零\n#define COMM_BIT_GET(a,b)     (!!((a) & (1<<(b)))) // 判断 a的b位是否置1 （!!用于将正数转为0或1）\n```\n<!-- more -->\nCOMM_BIT_SET与COMM_BIT_GET通常组合使用：\n\n```C\nenum {\n  TEST1 = 1,\n  TEST2 = 2,\n};\n\nint i = 0;\nCOMM_BIT_SET(i, TEST1);\ncout<< COMM_BIT_GET(i, TEST1) <<endl;  // true\ncout<< COMM_BIT_GET(i, TEST2) <<endl;  // false\n\nCOMM_BIT_SET(i, TEST2);\ncout<< COMM_BIT_GET(i, TEST1) <<endl;  // false\ncout<< COMM_BIT_GET(i, TEST2) <<endl;  // true\n\n```\n更多，[参见](http://imhuchao.com/423.html)\n","slug":"macro","published":1,"updated":"2017-02-21T14:07:30.869Z","_id":"cizfltmi600028wyva4po3noz","comments":1,"layout":"post","photos":[],"link":"","content":"<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#define COMM_BIT_SET(a,b)     ((a) |= (1&lt;&lt;(b)))   // 将 a 的 b 位置1（1左移b位）</div><div class=\"line\">#define COMM_BIT_CLR(a,b)     ((a) &amp;= ~(1&lt;&lt;(b)))  // 将 a 的 b 位清零</div><div class=\"line\">#define COMM_BIT_GET(a,b)     (!!((a) &amp; (1&lt;&lt;(b)))) // 判断 a的b位是否置1 （!!用于将正数转为0或1）</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>COMM_BIT_SET与COMM_BIT_GET通常组合使用：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">enum</span> &#123;</div><div class=\"line\">  TEST1 = <span class=\"number\">1</span>,</div><div class=\"line\">  TEST2 = <span class=\"number\">2</span>,</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</div><div class=\"line\">COMM_BIT_SET(i, TEST1);</div><div class=\"line\"><span class=\"built_in\">cout</span>&lt;&lt; COMM_BIT_GET(i, TEST1) &lt;&lt;<span class=\"built_in\">endl</span>;  <span class=\"comment\">// true</span></div><div class=\"line\"><span class=\"built_in\">cout</span>&lt;&lt; COMM_BIT_GET(i, TEST2) &lt;&lt;<span class=\"built_in\">endl</span>;  <span class=\"comment\">// false</span></div><div class=\"line\"></div><div class=\"line\">COMM_BIT_SET(i, TEST2);</div><div class=\"line\"><span class=\"built_in\">cout</span>&lt;&lt; COMM_BIT_GET(i, TEST1) &lt;&lt;<span class=\"built_in\">endl</span>;  <span class=\"comment\">// false</span></div><div class=\"line\"><span class=\"built_in\">cout</span>&lt;&lt; COMM_BIT_GET(i, TEST2) &lt;&lt;<span class=\"built_in\">endl</span>;  <span class=\"comment\">// true</span></div></pre></td></tr></table></figure>\n<p>更多，<a href=\"http://imhuchao.com/423.html\" target=\"_blank\" rel=\"external\">参见</a></p>\n","excerpt":"<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#define COMM_BIT_SET(a,b)     ((a) |= (1&lt;&lt;(b)))   // 将 a 的 b 位置1（1左移b位）</div><div class=\"line\">#define COMM_BIT_CLR(a,b)     ((a) &amp;= ~(1&lt;&lt;(b)))  // 将 a 的 b 位清零</div><div class=\"line\">#define COMM_BIT_GET(a,b)     (!!((a) &amp; (1&lt;&lt;(b)))) // 判断 a的b位是否置1 （!!用于将正数转为0或1）</div></pre></td></tr></table></figure>","more":"<p>COMM_BIT_SET与COMM_BIT_GET通常组合使用：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">enum</span> &#123;</div><div class=\"line\">  TEST1 = <span class=\"number\">1</span>,</div><div class=\"line\">  TEST2 = <span class=\"number\">2</span>,</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</div><div class=\"line\">COMM_BIT_SET(i, TEST1);</div><div class=\"line\"><span class=\"built_in\">cout</span>&lt;&lt; COMM_BIT_GET(i, TEST1) &lt;&lt;<span class=\"built_in\">endl</span>;  <span class=\"comment\">// true</span></div><div class=\"line\"><span class=\"built_in\">cout</span>&lt;&lt; COMM_BIT_GET(i, TEST2) &lt;&lt;<span class=\"built_in\">endl</span>;  <span class=\"comment\">// false</span></div><div class=\"line\"></div><div class=\"line\">COMM_BIT_SET(i, TEST2);</div><div class=\"line\"><span class=\"built_in\">cout</span>&lt;&lt; COMM_BIT_GET(i, TEST1) &lt;&lt;<span class=\"built_in\">endl</span>;  <span class=\"comment\">// false</span></div><div class=\"line\"><span class=\"built_in\">cout</span>&lt;&lt; COMM_BIT_GET(i, TEST2) &lt;&lt;<span class=\"built_in\">endl</span>;  <span class=\"comment\">// true</span></div></pre></td></tr></table></figure>\n<p>更多，<a href=\"http://imhuchao.com/423.html\">参见</a></p>"},{"title":"svm","date":"2017-02-14T11:25:32.000Z","mathjax":true,"_content":"","source":"_posts/svm.md","raw":"---\ntitle: svm\ndate: 2017-02-14 19:25:32\ntags: [svm, math, machine learning]\ncategories: machine learning\nmathjax: true\n---\n","slug":"svm","published":1,"updated":"2017-02-14T11:41:24.781Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizfltmix00068wyv5ymi85gu","content":"","excerpt":"","more":""},{"title":"yara进程扫描api","date":"2017-02-14T15:26:29.000Z","_content":"\n　　[yara](https://github.com/VirusTotal/yara) 是一款开源匹配工具，使用其独特的规则语法用于信息匹配，yara规则可以用于文件及进程信息匹配。\n　　其中，扫描进程api：\n　　YR_API int **yr_rules_scan_proc**(YR_RULES* rules, int pid, int flags, YR_CALLBACK_FUNC callback, void* user_data, int timeout);\n<!-- more -->\n\n　　该接口中使用 ptrace 追踪子进程内存数据，通过使用ptrace(PTRACE_ATTACH, pid, NULL, 0),读取[/proc/pid/mem](http://www.tuicool.com/articles/nUZRBrn)以获取进程数据，ptrace默认会发送[SIGSTOP](http://www.man7.org/linux/man-pages/man2/ptrace.2.html)信号给tracee进程，使该进程处于暂停的僵死状态，（类似ctrl + z 命令，通过命令bg使其后台继续运行，fg使其转入前台运行）,读完数据之后调用ptrace(PTRACE_DETACH, pid,  NULL, 0)使得被扫描进程继续执行。\n\n注意：\n* 如果扫描非自身进程内存内容，必须使用ptrace才行，类似：\n```C++\nsprintf( buf, \"/proc/%d/mem\" , pid );\nfd = open( buf, O_RDONLY );\nptrace( PTRACE_ATTACH, pid, NULL, NULL );\nwaitpid( pid, NULL, 0 );\nlseek( fd, offset, SEEK_SET );\nread( fd, buf, sizeof(buf) );\nptrace( PTRACE_DETACH, pid, NULL, NULL);\n```\n\n* 如果使用该接口扫描进程数据，发送SIGSTOP之后立即退出而不使用PTRACE_DETACH，则会导致被扫描进程处于僵死状态。类似find 命令执行操作时，使用ctrl + z，使用bg使得命令恢复:\n![](yr-rules-scan-proc/abc0000000006.png)\n\n\nyr_rules_scan_proc接口实现如下：\n```C++\nYR_API int yr_rules_scan_proc(\n    YR_RULES* rules,\n    int pid,\n    int flags,\n    YR_CALLBACK_FUNC callback,\n    void* user_data,\n    int timeout)\n{\n  YR_MEMORY_BLOCK_ITERATOR iterator;\n\n  int result = yr_process_open_iterator(\n      pid,\n      &iterator);   // 此处调用_yr_process_attach\n\n  if (result == ERROR_SUCCESS)\n  {\n    result = yr_rules_scan_mem_blocks(\n        rules,\n        &iterator,\n        flags | SCAN_FLAGS_PROCESS_MEMORY,\n        callback,\n        user_data,\n        timeout);\n\n    yr_process_close_iterator(&iterator);  // 此处调用_yr_process_detach\n  }\n\n  return result;\n}\n\nint _yr_process_attach(\n    int pid,\n    YR_PROC_ITERATOR_CTX* context)\n{\n  char buffer[256];\n\n  context->pid = pid;\n  context->maps = NULL;\n  context->mem_fd = -1;\n\n  snprintf(buffer, sizeof(buffer), \"/proc/%u/maps\", pid);\n  context->maps = fopen(buffer, \"r\");\n\n  if (context->maps == NULL)\n    return ERROR_COULD_NOT_ATTACH_TO_PROCESS;\n\n  snprintf(buffer, sizeof(buffer), \"/proc/%u/mem\", pid);\n  context->mem_fd = open(buffer, O_RDONLY);\n\n  if (context->mem_fd == -1)\n  {\n    fclose(context->maps);\n    context->maps = NULL;\n\n    return ERROR_COULD_NOT_ATTACH_TO_PROCESS;\n  }\n\n  if (ptrace(PTRACE_ATTACH, pid, NULL, 0) == -1)\n  {\n    fclose(context->maps);\n    context->maps = NULL;\n\n    close(context->mem_fd);\n    context->mem_fd = -1;\n\n    return ERROR_COULD_NOT_ATTACH_TO_PROCESS;\n  }\n\n  return ERROR_SUCCESS;\n}\n\nint _yr_process_detach(\n    YR_PROC_ITERATOR_CTX* context)\n{\n  fclose(context->maps);\n  close(context->mem_fd);\n  ptrace(PTRACE_DETACH, context->pid, NULL, 0);\n\n  return ERROR_SUCCESS;\n}\n\n```\n","source":"_posts/yr-rules-scan-proc.md","raw":"---\ntitle: yara进程扫描api\ndate: 2017-02-14 23:26:29\ntags: [C, yara, proc, api]\ncategories: C\n---\n\n　　[yara](https://github.com/VirusTotal/yara) 是一款开源匹配工具，使用其独特的规则语法用于信息匹配，yara规则可以用于文件及进程信息匹配。\n　　其中，扫描进程api：\n　　YR_API int **yr_rules_scan_proc**(YR_RULES* rules, int pid, int flags, YR_CALLBACK_FUNC callback, void* user_data, int timeout);\n<!-- more -->\n\n　　该接口中使用 ptrace 追踪子进程内存数据，通过使用ptrace(PTRACE_ATTACH, pid, NULL, 0),读取[/proc/pid/mem](http://www.tuicool.com/articles/nUZRBrn)以获取进程数据，ptrace默认会发送[SIGSTOP](http://www.man7.org/linux/man-pages/man2/ptrace.2.html)信号给tracee进程，使该进程处于暂停的僵死状态，（类似ctrl + z 命令，通过命令bg使其后台继续运行，fg使其转入前台运行）,读完数据之后调用ptrace(PTRACE_DETACH, pid,  NULL, 0)使得被扫描进程继续执行。\n\n注意：\n* 如果扫描非自身进程内存内容，必须使用ptrace才行，类似：\n```C++\nsprintf( buf, \"/proc/%d/mem\" , pid );\nfd = open( buf, O_RDONLY );\nptrace( PTRACE_ATTACH, pid, NULL, NULL );\nwaitpid( pid, NULL, 0 );\nlseek( fd, offset, SEEK_SET );\nread( fd, buf, sizeof(buf) );\nptrace( PTRACE_DETACH, pid, NULL, NULL);\n```\n\n* 如果使用该接口扫描进程数据，发送SIGSTOP之后立即退出而不使用PTRACE_DETACH，则会导致被扫描进程处于僵死状态。类似find 命令执行操作时，使用ctrl + z，使用bg使得命令恢复:\n![](yr-rules-scan-proc/abc0000000006.png)\n\n\nyr_rules_scan_proc接口实现如下：\n```C++\nYR_API int yr_rules_scan_proc(\n    YR_RULES* rules,\n    int pid,\n    int flags,\n    YR_CALLBACK_FUNC callback,\n    void* user_data,\n    int timeout)\n{\n  YR_MEMORY_BLOCK_ITERATOR iterator;\n\n  int result = yr_process_open_iterator(\n      pid,\n      &iterator);   // 此处调用_yr_process_attach\n\n  if (result == ERROR_SUCCESS)\n  {\n    result = yr_rules_scan_mem_blocks(\n        rules,\n        &iterator,\n        flags | SCAN_FLAGS_PROCESS_MEMORY,\n        callback,\n        user_data,\n        timeout);\n\n    yr_process_close_iterator(&iterator);  // 此处调用_yr_process_detach\n  }\n\n  return result;\n}\n\nint _yr_process_attach(\n    int pid,\n    YR_PROC_ITERATOR_CTX* context)\n{\n  char buffer[256];\n\n  context->pid = pid;\n  context->maps = NULL;\n  context->mem_fd = -1;\n\n  snprintf(buffer, sizeof(buffer), \"/proc/%u/maps\", pid);\n  context->maps = fopen(buffer, \"r\");\n\n  if (context->maps == NULL)\n    return ERROR_COULD_NOT_ATTACH_TO_PROCESS;\n\n  snprintf(buffer, sizeof(buffer), \"/proc/%u/mem\", pid);\n  context->mem_fd = open(buffer, O_RDONLY);\n\n  if (context->mem_fd == -1)\n  {\n    fclose(context->maps);\n    context->maps = NULL;\n\n    return ERROR_COULD_NOT_ATTACH_TO_PROCESS;\n  }\n\n  if (ptrace(PTRACE_ATTACH, pid, NULL, 0) == -1)\n  {\n    fclose(context->maps);\n    context->maps = NULL;\n\n    close(context->mem_fd);\n    context->mem_fd = -1;\n\n    return ERROR_COULD_NOT_ATTACH_TO_PROCESS;\n  }\n\n  return ERROR_SUCCESS;\n}\n\nint _yr_process_detach(\n    YR_PROC_ITERATOR_CTX* context)\n{\n  fclose(context->maps);\n  close(context->mem_fd);\n  ptrace(PTRACE_DETACH, context->pid, NULL, 0);\n\n  return ERROR_SUCCESS;\n}\n\n```\n","slug":"yr-rules-scan-proc","published":1,"updated":"2017-02-15T11:40:05.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizfltmj300088wyvjvnvm407","content":"<p>　　<a href=\"https://github.com/VirusTotal/yara\" target=\"_blank\" rel=\"external\">yara</a> 是一款开源匹配工具，使用其独特的规则语法用于信息匹配，yara规则可以用于文件及进程信息匹配。<br>　　其中，扫描进程api：<br>　　YR_API int <strong>yr_rules_scan_proc</strong>(YR_RULES<em> rules, int pid, int flags, YR_CALLBACK_FUNC callback, void</em> user_data, int timeout);<br><a id=\"more\"></a></p>\n<p>　　该接口中使用 ptrace 追踪子进程内存数据，通过使用ptrace(PTRACE_ATTACH, pid, NULL, 0),读取<a href=\"http://www.tuicool.com/articles/nUZRBrn\" target=\"_blank\" rel=\"external\">/proc/pid/mem</a>以获取进程数据，ptrace默认会发送<a href=\"http://www.man7.org/linux/man-pages/man2/ptrace.2.html\" target=\"_blank\" rel=\"external\">SIGSTOP</a>信号给tracee进程，使该进程处于暂停的僵死状态，（类似ctrl + z 命令，通过命令bg使其后台继续运行，fg使其转入前台运行）,读完数据之后调用ptrace(PTRACE_DETACH, pid,  NULL, 0)使得被扫描进程继续执行。</p>\n<p>注意：</p>\n<ul>\n<li><p>如果扫描非自身进程内存内容，必须使用ptrace才行，类似：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">sprintf</span>( buf, <span class=\"string\">\"/proc/%d/mem\"</span> , pid );</div><div class=\"line\">fd = open( buf, O_RDONLY );</div><div class=\"line\">ptrace( PTRACE_ATTACH, pid, <span class=\"literal\">NULL</span>, <span class=\"literal\">NULL</span> );</div><div class=\"line\">waitpid( pid, <span class=\"literal\">NULL</span>, <span class=\"number\">0</span> );</div><div class=\"line\">lseek( fd, offset, SEEK_SET );</div><div class=\"line\">read( fd, buf, <span class=\"keyword\">sizeof</span>(buf) );</div><div class=\"line\">ptrace( PTRACE_DETACH, pid, <span class=\"literal\">NULL</span>, <span class=\"literal\">NULL</span>);</div></pre></td></tr></table></figure>\n</li>\n<li><p>如果使用该接口扫描进程数据，发送SIGSTOP之后立即退出而不使用PTRACE_DETACH，则会导致被扫描进程处于僵死状态。类似find 命令执行操作时，使用ctrl + z，使用bg使得命令恢复:<br><img src=\"/2017/02/14/yr-rules-scan-proc/abc0000000006.png\" alt=\"\"></p>\n</li>\n</ul>\n<p>yr_rules_scan_proc接口实现如下：<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\">YR_API <span class=\"keyword\">int</span> <span class=\"title\">yr_rules_scan_proc</span><span class=\"params\">(</span></span></div><div class=\"line\">    YR_RULES* rules,</div><div class=\"line\">    <span class=\"keyword\">int</span> pid,</div><div class=\"line\">    <span class=\"keyword\">int</span> flags,</div><div class=\"line\">    YR_CALLBACK_FUNC callback,</div><div class=\"line\">    <span class=\"keyword\">void</span>* user_data,</div><div class=\"line\">    <span class=\"keyword\">int</span> timeout)</div><div class=\"line\">&#123;</div><div class=\"line\">  YR_MEMORY_BLOCK_ITERATOR iterator;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">int</span> result = yr_process_open_iterator(</div><div class=\"line\">      pid,</div><div class=\"line\">      &amp;iterator);   <span class=\"comment\">// 此处调用_yr_process_attach</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span> (result == ERROR_SUCCESS)</div><div class=\"line\">  &#123;</div><div class=\"line\">    result = yr_rules_scan_mem_blocks(</div><div class=\"line\">        rules,</div><div class=\"line\">        &amp;iterator,</div><div class=\"line\">        flags | SCAN_FLAGS_PROCESS_MEMORY,</div><div class=\"line\">        callback,</div><div class=\"line\">        user_data,</div><div class=\"line\">        timeout);</div><div class=\"line\"></div><div class=\"line\">    yr_process_close_iterator(&amp;iterator);  <span class=\"comment\">// 此处调用_yr_process_detach</span></div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> result;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> _yr_process_attach(</div><div class=\"line\">    <span class=\"keyword\">int</span> pid,</div><div class=\"line\">    YR_PROC_ITERATOR_CTX* context)</div><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"keyword\">char</span> buffer[<span class=\"number\">256</span>];</div><div class=\"line\"></div><div class=\"line\">  context-&gt;pid = pid;</div><div class=\"line\">  context-&gt;maps = <span class=\"literal\">NULL</span>;</div><div class=\"line\">  context-&gt;mem_fd = <span class=\"number\">-1</span>;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"built_in\">snprintf</span>(buffer, <span class=\"keyword\">sizeof</span>(buffer), <span class=\"string\">\"/proc/%u/maps\"</span>, pid);</div><div class=\"line\">  context-&gt;maps = fopen(buffer, <span class=\"string\">\"r\"</span>);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span> (context-&gt;maps == <span class=\"literal\">NULL</span>)</div><div class=\"line\">    <span class=\"keyword\">return</span> ERROR_COULD_NOT_ATTACH_TO_PROCESS;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"built_in\">snprintf</span>(buffer, <span class=\"keyword\">sizeof</span>(buffer), <span class=\"string\">\"/proc/%u/mem\"</span>, pid);</div><div class=\"line\">  context-&gt;mem_fd = open(buffer, O_RDONLY);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span> (context-&gt;mem_fd == <span class=\"number\">-1</span>)</div><div class=\"line\">  &#123;</div><div class=\"line\">    fclose(context-&gt;maps);</div><div class=\"line\">    context-&gt;maps = <span class=\"literal\">NULL</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> ERROR_COULD_NOT_ATTACH_TO_PROCESS;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span> (ptrace(PTRACE_ATTACH, pid, <span class=\"literal\">NULL</span>, <span class=\"number\">0</span>) == <span class=\"number\">-1</span>)</div><div class=\"line\">  &#123;</div><div class=\"line\">    fclose(context-&gt;maps);</div><div class=\"line\">    context-&gt;maps = <span class=\"literal\">NULL</span>;</div><div class=\"line\"></div><div class=\"line\">    close(context-&gt;mem_fd);</div><div class=\"line\">    context-&gt;mem_fd = <span class=\"number\">-1</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> ERROR_COULD_NOT_ATTACH_TO_PROCESS;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> ERROR_SUCCESS;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> _yr_process_detach(</div><div class=\"line\">    YR_PROC_ITERATOR_CTX* context)</div><div class=\"line\">&#123;</div><div class=\"line\">  fclose(context-&gt;maps);</div><div class=\"line\">  close(context-&gt;mem_fd);</div><div class=\"line\">  ptrace(PTRACE_DETACH, context-&gt;pid, <span class=\"literal\">NULL</span>, <span class=\"number\">0</span>);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> ERROR_SUCCESS;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>　　<a href=\"https://github.com/VirusTotal/yara\">yara</a> 是一款开源匹配工具，使用其独特的规则语法用于信息匹配，yara规则可以用于文件及进程信息匹配。<br>　　其中，扫描进程api：<br>　　YR_API int <strong>yr_rules_scan_proc</strong>(YR_RULES<em> rules, int pid, int flags, YR_CALLBACK_FUNC callback, void</em> user_data, int timeout);<br></p>","more":"<p></p>\n<p>　　该接口中使用 ptrace 追踪子进程内存数据，通过使用ptrace(PTRACE_ATTACH, pid, NULL, 0),读取<a href=\"http://www.tuicool.com/articles/nUZRBrn\">/proc/pid/mem</a>以获取进程数据，ptrace默认会发送<a href=\"http://www.man7.org/linux/man-pages/man2/ptrace.2.html\">SIGSTOP</a>信号给tracee进程，使该进程处于暂停的僵死状态，（类似ctrl + z 命令，通过命令bg使其后台继续运行，fg使其转入前台运行）,读完数据之后调用ptrace(PTRACE_DETACH, pid,  NULL, 0)使得被扫描进程继续执行。</p>\n<p>注意：</p>\n<ul>\n<li><p>如果扫描非自身进程内存内容，必须使用ptrace才行，类似：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">sprintf</span>( buf, <span class=\"string\">\"/proc/%d/mem\"</span> , pid );</div><div class=\"line\">fd = open( buf, O_RDONLY );</div><div class=\"line\">ptrace( PTRACE_ATTACH, pid, <span class=\"literal\">NULL</span>, <span class=\"literal\">NULL</span> );</div><div class=\"line\">waitpid( pid, <span class=\"literal\">NULL</span>, <span class=\"number\">0</span> );</div><div class=\"line\">lseek( fd, offset, SEEK_SET );</div><div class=\"line\">read( fd, buf, <span class=\"keyword\">sizeof</span>(buf) );</div><div class=\"line\">ptrace( PTRACE_DETACH, pid, <span class=\"literal\">NULL</span>, <span class=\"literal\">NULL</span>);</div></pre></td></tr></table></figure>\n</li>\n<li><p>如果使用该接口扫描进程数据，发送SIGSTOP之后立即退出而不使用PTRACE_DETACH，则会导致被扫描进程处于僵死状态。类似find 命令执行操作时，使用ctrl + z，使用bg使得命令恢复:<br><img src=\"/2017/02/14/yr-rules-scan-proc/abc0000000006.png\" alt=\"\"></p>\n</li>\n</ul>\n<p>yr_rules_scan_proc接口实现如下：<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\">YR_API <span class=\"keyword\">int</span> <span class=\"title\">yr_rules_scan_proc</span><span class=\"params\">(</span></span></div><div class=\"line\">    YR_RULES* rules,</div><div class=\"line\">    <span class=\"keyword\">int</span> pid,</div><div class=\"line\">    <span class=\"keyword\">int</span> flags,</div><div class=\"line\">    YR_CALLBACK_FUNC callback,</div><div class=\"line\">    <span class=\"keyword\">void</span>* user_data,</div><div class=\"line\">    <span class=\"keyword\">int</span> timeout)</div><div class=\"line\">&#123;</div><div class=\"line\">  YR_MEMORY_BLOCK_ITERATOR iterator;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">int</span> result = yr_process_open_iterator(</div><div class=\"line\">      pid,</div><div class=\"line\">      &amp;iterator);   <span class=\"comment\">// 此处调用_yr_process_attach</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span> (result == ERROR_SUCCESS)</div><div class=\"line\">  &#123;</div><div class=\"line\">    result = yr_rules_scan_mem_blocks(</div><div class=\"line\">        rules,</div><div class=\"line\">        &amp;iterator,</div><div class=\"line\">        flags | SCAN_FLAGS_PROCESS_MEMORY,</div><div class=\"line\">        callback,</div><div class=\"line\">        user_data,</div><div class=\"line\">        timeout);</div><div class=\"line\"></div><div class=\"line\">    yr_process_close_iterator(&amp;iterator);  <span class=\"comment\">// 此处调用_yr_process_detach</span></div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> result;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> _yr_process_attach(</div><div class=\"line\">    <span class=\"keyword\">int</span> pid,</div><div class=\"line\">    YR_PROC_ITERATOR_CTX* context)</div><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"keyword\">char</span> buffer[<span class=\"number\">256</span>];</div><div class=\"line\"></div><div class=\"line\">  context-&gt;pid = pid;</div><div class=\"line\">  context-&gt;maps = <span class=\"literal\">NULL</span>;</div><div class=\"line\">  context-&gt;mem_fd = <span class=\"number\">-1</span>;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"built_in\">snprintf</span>(buffer, <span class=\"keyword\">sizeof</span>(buffer), <span class=\"string\">\"/proc/%u/maps\"</span>, pid);</div><div class=\"line\">  context-&gt;maps = fopen(buffer, <span class=\"string\">\"r\"</span>);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span> (context-&gt;maps == <span class=\"literal\">NULL</span>)</div><div class=\"line\">    <span class=\"keyword\">return</span> ERROR_COULD_NOT_ATTACH_TO_PROCESS;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"built_in\">snprintf</span>(buffer, <span class=\"keyword\">sizeof</span>(buffer), <span class=\"string\">\"/proc/%u/mem\"</span>, pid);</div><div class=\"line\">  context-&gt;mem_fd = open(buffer, O_RDONLY);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span> (context-&gt;mem_fd == <span class=\"number\">-1</span>)</div><div class=\"line\">  &#123;</div><div class=\"line\">    fclose(context-&gt;maps);</div><div class=\"line\">    context-&gt;maps = <span class=\"literal\">NULL</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> ERROR_COULD_NOT_ATTACH_TO_PROCESS;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span> (ptrace(PTRACE_ATTACH, pid, <span class=\"literal\">NULL</span>, <span class=\"number\">0</span>) == <span class=\"number\">-1</span>)</div><div class=\"line\">  &#123;</div><div class=\"line\">    fclose(context-&gt;maps);</div><div class=\"line\">    context-&gt;maps = <span class=\"literal\">NULL</span>;</div><div class=\"line\"></div><div class=\"line\">    close(context-&gt;mem_fd);</div><div class=\"line\">    context-&gt;mem_fd = <span class=\"number\">-1</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> ERROR_COULD_NOT_ATTACH_TO_PROCESS;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> ERROR_SUCCESS;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> _yr_process_detach(</div><div class=\"line\">    YR_PROC_ITERATOR_CTX* context)</div><div class=\"line\">&#123;</div><div class=\"line\">  fclose(context-&gt;maps);</div><div class=\"line\">  close(context-&gt;mem_fd);</div><div class=\"line\">  ptrace(PTRACE_DETACH, context-&gt;pid, <span class=\"literal\">NULL</span>, <span class=\"number\">0</span>);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> ERROR_SUCCESS;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n<!--more -->\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n<!--more -->\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2017-02-08T11:49:09.991Z","updated":"2017-02-08T11:49:09.991Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizfltmj700098wyvddpbrgec","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.<br><a id=\"more\"></a></p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.<br></p>","more":"<p></p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>"},{"title":"DNS 解析","date":"2017-02-06T13:35:15.000Z","_content":"\n## DNS域名系统\n　　DNS(Domain Name System，域名系统)，提供域名到IP的解析功能，可以采用**静态域名解析**方法，若解析不成功，再采用**动态域名解析**方法。使用静态域名解析表的方法，可以大大提高域名解析效率。\n<!--more -->\n\n### 静态域名查询\n\n* 本机配置域名到ip的解析于/etc/hosts中，以 *ip domain* 的形式；\n  ![hosts](dns/abc0000000000.png)\n* 通过查找本地的[nscd](http://www.10tiao.com/html/357/201607/2247484055/1.html)进程中缓存的: getent hosts baiweiguo.github.io。\n  ![resolv](dns/abc0000000004.png)\n  ![resolv](dns/abc0000000005.png)\n* 静态配置dns服务器，配置于: /etc/resolv.conf中，形式为：*nameserver ip*。其中，ip为dns服务器ip；\n  ![resolv](dns/abc0000000001.png)\n### 动态域名查询\n　　如果静态域名查询方式未查询到数据，客户端则会广播本机局域网，若局域网有[DHCP](http://baike.baidu.com/link?url=VFFbr-wynK1El3cj3OOjc77_I9kUXYbFkbxNClcF_SE8PR3eNA8DeXnwfgpbDu2hJu7AzUXIh_bRGJ8miM72C_)(动态主机配置协议)服务器时，才会响应给客户端dns ip：\n  ![](dns/abc0000000002.png)\n  若[本地DNS服务器](https://www.zhihu.com/question/48085305/answer/109256904)未解析成功，则会向dns服务器进行查询：\n  [![](dns/abc0000000003.png)](http://369369.blog.51cto.com/319630/812889/)\n\n## DNS查询方式\n　　分为递归查询与迭代查询[点此参见](http://blog.csdn.net/shanamaid/article/details/51758820)，[区别](https://zhidao.baidu.com/question/311381817.html)。\n\n## 浏览器域名解析\n","source":"_posts/dns.md","raw":"---\ntitle: DNS 解析\ndate: 2017-02-06 21:35:15\ntags: [dns,domain]\ncategories: network\n---\n\n## DNS域名系统\n　　DNS(Domain Name System，域名系统)，提供域名到IP的解析功能，可以采用**静态域名解析**方法，若解析不成功，再采用**动态域名解析**方法。使用静态域名解析表的方法，可以大大提高域名解析效率。\n<!--more -->\n\n### 静态域名查询\n\n* 本机配置域名到ip的解析于/etc/hosts中，以 *ip domain* 的形式；\n  ![hosts](dns/abc0000000000.png)\n* 通过查找本地的[nscd](http://www.10tiao.com/html/357/201607/2247484055/1.html)进程中缓存的: getent hosts baiweiguo.github.io。\n  ![resolv](dns/abc0000000004.png)\n  ![resolv](dns/abc0000000005.png)\n* 静态配置dns服务器，配置于: /etc/resolv.conf中，形式为：*nameserver ip*。其中，ip为dns服务器ip；\n  ![resolv](dns/abc0000000001.png)\n### 动态域名查询\n　　如果静态域名查询方式未查询到数据，客户端则会广播本机局域网，若局域网有[DHCP](http://baike.baidu.com/link?url=VFFbr-wynK1El3cj3OOjc77_I9kUXYbFkbxNClcF_SE8PR3eNA8DeXnwfgpbDu2hJu7AzUXIh_bRGJ8miM72C_)(动态主机配置协议)服务器时，才会响应给客户端dns ip：\n  ![](dns/abc0000000002.png)\n  若[本地DNS服务器](https://www.zhihu.com/question/48085305/answer/109256904)未解析成功，则会向dns服务器进行查询：\n  [![](dns/abc0000000003.png)](http://369369.blog.51cto.com/319630/812889/)\n\n## DNS查询方式\n　　分为递归查询与迭代查询[点此参见](http://blog.csdn.net/shanamaid/article/details/51758820)，[区别](https://zhidao.baidu.com/question/311381817.html)。\n\n## 浏览器域名解析\n","slug":"dns","published":1,"updated":"2017-02-08T11:49:09.960Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizfltmjd000c8wyvis6ju8qd","content":"<h2 id=\"DNS域名系统\"><a href=\"#DNS域名系统\" class=\"headerlink\" title=\"DNS域名系统\"></a>DNS域名系统</h2><p>　　DNS(Domain Name System，域名系统)，提供域名到IP的解析功能，可以采用<strong>静态域名解析</strong>方法，若解析不成功，再采用<strong>动态域名解析</strong>方法。使用静态域名解析表的方法，可以大大提高域名解析效率。<br><a id=\"more\"></a></p>\n<h3 id=\"静态域名查询\"><a href=\"#静态域名查询\" class=\"headerlink\" title=\"静态域名查询\"></a>静态域名查询</h3><ul>\n<li>本机配置域名到ip的解析于/etc/hosts中，以 <em>ip domain</em> 的形式；<br><img src=\"/2017/02/06/dns/abc0000000000.png\" alt=\"hosts\"></li>\n<li>通过查找本地的<a href=\"http://www.10tiao.com/html/357/201607/2247484055/1.html\" target=\"_blank\" rel=\"external\">nscd</a>进程中缓存的: getent hosts baiweiguo.github.io。<br><img src=\"/2017/02/06/dns/abc0000000004.png\" alt=\"resolv\"><br><img src=\"/2017/02/06/dns/abc0000000005.png\" alt=\"resolv\"></li>\n<li>静态配置dns服务器，配置于: /etc/resolv.conf中，形式为：<em>nameserver ip</em>。其中，ip为dns服务器ip；<br><img src=\"/2017/02/06/dns/abc0000000001.png\" alt=\"resolv\"><h3 id=\"动态域名查询\"><a href=\"#动态域名查询\" class=\"headerlink\" title=\"动态域名查询\"></a>动态域名查询</h3>　　如果静态域名查询方式未查询到数据，客户端则会广播本机局域网，若局域网有<a href=\"http://baike.baidu.com/link?url=VFFbr-wynK1El3cj3OOjc77_I9kUXYbFkbxNClcF_SE8PR3eNA8DeXnwfgpbDu2hJu7AzUXIh_bRGJ8miM72C_\" target=\"_blank\" rel=\"external\">DHCP</a>(动态主机配置协议)服务器时，才会响应给客户端dns ip：<br><img src=\"/2017/02/06/dns/abc0000000002.png\" alt=\"\"><br>若<a href=\"https://www.zhihu.com/question/48085305/answer/109256904\" target=\"_blank\" rel=\"external\">本地DNS服务器</a>未解析成功，则会向dns服务器进行查询：<br><a href=\"http://369369.blog.51cto.com/319630/812889/\" target=\"_blank\" rel=\"external\"><img src=\"/2017/02/06/dns/abc0000000003.png\" alt=\"\"></a></li>\n</ul>\n<h2 id=\"DNS查询方式\"><a href=\"#DNS查询方式\" class=\"headerlink\" title=\"DNS查询方式\"></a>DNS查询方式</h2><p>　　分为递归查询与迭代查询<a href=\"http://blog.csdn.net/shanamaid/article/details/51758820\" target=\"_blank\" rel=\"external\">点此参见</a>，<a href=\"https://zhidao.baidu.com/question/311381817.html\" target=\"_blank\" rel=\"external\">区别</a>。</p>\n<h2 id=\"浏览器域名解析\"><a href=\"#浏览器域名解析\" class=\"headerlink\" title=\"浏览器域名解析\"></a>浏览器域名解析</h2>","excerpt":"<h2 id=\"DNS域名系统\"><a href=\"#DNS域名系统\" class=\"headerlink\" title=\"DNS域名系统\"></a>DNS域名系统</h2><p>　　DNS(Domain Name System，域名系统)，提供域名到IP的解析功能，可以采用<strong>静态域名解析</strong>方法，若解析不成功，再采用<strong>动态域名解析</strong>方法。使用静态域名解析表的方法，可以大大提高域名解析效率。<br></p>","more":"<p></p>\n<h3 id=\"静态域名查询\"><a href=\"#静态域名查询\" class=\"headerlink\" title=\"静态域名查询\"></a>静态域名查询</h3><ul>\n<li>本机配置域名到ip的解析于/etc/hosts中，以 <em>ip domain</em> 的形式；<br><img src=\"/2017/02/06/dns/abc0000000000.png\" alt=\"hosts\"></li>\n<li>通过查找本地的<a href=\"http://www.10tiao.com/html/357/201607/2247484055/1.html\">nscd</a>进程中缓存的: getent hosts baiweiguo.github.io。<br><img src=\"/2017/02/06/dns/abc0000000004.png\" alt=\"resolv\"><br><img src=\"/2017/02/06/dns/abc0000000005.png\" alt=\"resolv\"></li>\n<li>静态配置dns服务器，配置于: /etc/resolv.conf中，形式为：<em>nameserver ip</em>。其中，ip为dns服务器ip；<br><img src=\"/2017/02/06/dns/abc0000000001.png\" alt=\"resolv\"><h3 id=\"动态域名查询\"><a href=\"#动态域名查询\" class=\"headerlink\" title=\"动态域名查询\"></a>动态域名查询</h3>　　如果静态域名查询方式未查询到数据，客户端则会广播本机局域网，若局域网有<a href=\"http://baike.baidu.com/link?url=VFFbr-wynK1El3cj3OOjc77_I9kUXYbFkbxNClcF_SE8PR3eNA8DeXnwfgpbDu2hJu7AzUXIh_bRGJ8miM72C_\">DHCP</a>(动态主机配置协议)服务器时，才会响应给客户端dns ip：<br><img src=\"/2017/02/06/dns/abc0000000002.png\" alt=\"\"><br>若<a href=\"https://www.zhihu.com/question/48085305/answer/109256904\">本地DNS服务器</a>未解析成功，则会向dns服务器进行查询：<br><a href=\"http://369369.blog.51cto.com/319630/812889/\"><img src=\"/2017/02/06/dns/abc0000000003.png\" alt=\"\"></a></li>\n</ul>\n<h2 id=\"DNS查询方式\"><a href=\"#DNS查询方式\" class=\"headerlink\" title=\"DNS查询方式\"></a>DNS查询方式</h2><p>　　分为递归查询与迭代查询<a href=\"http://blog.csdn.net/shanamaid/article/details/51758820\">点此参见</a>，<a href=\"https://zhidao.baidu.com/question/311381817.html\">区别</a>。</p>\n<h2 id=\"浏览器域名解析\"><a href=\"#浏览器域名解析\" class=\"headerlink\" title=\"浏览器域名解析\"></a>浏览器域名解析</h2>"},{"title":"Hexo 博客源文件备份与恢复","date":"2017-02-08T12:06:25.000Z","_content":"　　本文记录了两部分：hexo博客系统发布新文章时，自动备份托管到github；根据github上托管的项目，能够将最新的数据恢复到本地。自动备份详细技术原理可参考[文章](http://igeek.wang/2016/09/01/automatic-backup/#more)。\n\n<!-- more -->\n\n### 备份Hexo博客源文件\n* Github上新创建一个空的repo，取名hexo-next-blog用于远程仓库备份；进入本地博客源码的hexo文件夹，创建本地仓库：\n```sh\ngit init\n```\n\n* 设置远程仓库地址，并更新数据(第一次远程空仓库，无数据更新)：\n```sh\ngit remote add origin git@github:XXX/hexo-next-blog.git\ngit pull origin master\n```\n\n* 修改.gitignore文件，加入*.log, public/ 以及 deploy*/;\n* 本地提交Hexo源码：\n```sh\ngit add .\ngit commit -m \"hexo next blog数据备份\"\n```\n\n* 本地仓库数据推送github仓库:\n```sh\ngit push origin master\n```\n\n### 恢复Hexo博客源文件\n　　切换电脑后，安装node，git环境，配置github sshkey。\n　　创建空目录hexo为工作目录，clone github上的repo：\n```sh\ngit clone git@github.com:xxx/hexo-next-blog.git\n```\n　　git clone成功后，安装hexo环境:\n```sh\nnpm install hexo\nnpm install\nnpm install hexo-deployer-git\nnpm install --save shelljs   # 使用hexo d写文章时，自动备份时用\n```\n\n另外，themes/next主题文件夹下的数据不会备份，若需备份，可删除该文件夹下的.git目录等信息再加入备份。\n","source":"_posts/auto-bak-hexo-blog.md","raw":"---\ntitle: Hexo 博客源文件备份与恢复\ndate: 2017-02-08 20:06:25\ntags: hexo\ncategories: hexo\n---\n　　本文记录了两部分：hexo博客系统发布新文章时，自动备份托管到github；根据github上托管的项目，能够将最新的数据恢复到本地。自动备份详细技术原理可参考[文章](http://igeek.wang/2016/09/01/automatic-backup/#more)。\n\n<!-- more -->\n\n### 备份Hexo博客源文件\n* Github上新创建一个空的repo，取名hexo-next-blog用于远程仓库备份；进入本地博客源码的hexo文件夹，创建本地仓库：\n```sh\ngit init\n```\n\n* 设置远程仓库地址，并更新数据(第一次远程空仓库，无数据更新)：\n```sh\ngit remote add origin git@github:XXX/hexo-next-blog.git\ngit pull origin master\n```\n\n* 修改.gitignore文件，加入*.log, public/ 以及 deploy*/;\n* 本地提交Hexo源码：\n```sh\ngit add .\ngit commit -m \"hexo next blog数据备份\"\n```\n\n* 本地仓库数据推送github仓库:\n```sh\ngit push origin master\n```\n\n### 恢复Hexo博客源文件\n　　切换电脑后，安装node，git环境，配置github sshkey。\n　　创建空目录hexo为工作目录，clone github上的repo：\n```sh\ngit clone git@github.com:xxx/hexo-next-blog.git\n```\n　　git clone成功后，安装hexo环境:\n```sh\nnpm install hexo\nnpm install\nnpm install hexo-deployer-git\nnpm install --save shelljs   # 使用hexo d写文章时，自动备份时用\n```\n\n另外，themes/next主题文件夹下的数据不会备份，若需备份，可删除该文件夹下的.git目录等信息再加入备份。\n","slug":"auto-bak-hexo-blog","published":1,"updated":"2017-02-08T13:03:56.320Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizfltmjg000e8wyvnpy0ch4p","content":"<p>　　本文记录了两部分：hexo博客系统发布新文章时，自动备份托管到github；根据github上托管的项目，能够将最新的数据恢复到本地。自动备份详细技术原理可参考<a href=\"http://igeek.wang/2016/09/01/automatic-backup/#more\" target=\"_blank\" rel=\"external\">文章</a>。</p>\n<a id=\"more\"></a>\n<h3 id=\"备份Hexo博客源文件\"><a href=\"#备份Hexo博客源文件\" class=\"headerlink\" title=\"备份Hexo博客源文件\"></a>备份Hexo博客源文件</h3><ul>\n<li><p>Github上新创建一个空的repo，取名hexo-next-blog用于远程仓库备份；进入本地博客源码的hexo文件夹，创建本地仓库：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git init</div></pre></td></tr></table></figure>\n</li>\n<li><p>设置远程仓库地址，并更新数据(第一次远程空仓库，无数据更新)：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote add origin git@github:XXX/hexo-next-blog.git</div><div class=\"line\">git pull origin master</div></pre></td></tr></table></figure>\n</li>\n<li><p>修改.gitignore文件，加入<em>.log, public/ 以及 deploy</em>/;</p>\n</li>\n<li><p>本地提交Hexo源码：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add .</div><div class=\"line\">git commit -m <span class=\"string\">\"hexo next blog数据备份\"</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>本地仓库数据推送github仓库:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push origin master</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"恢复Hexo博客源文件\"><a href=\"#恢复Hexo博客源文件\" class=\"headerlink\" title=\"恢复Hexo博客源文件\"></a>恢复Hexo博客源文件</h3><p>　　切换电脑后，安装node，git环境，配置github sshkey。<br>　　创建空目录hexo为工作目录，clone github上的repo：<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> git@github.com:xxx/hexo-next-blog.git</div></pre></td></tr></table></figure></p>\n<p>　　git clone成功后，安装hexo环境:<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo</div><div class=\"line\">npm install</div><div class=\"line\">npm install hexo-deployer-git</div><div class=\"line\">npm install --save shelljs   <span class=\"comment\"># 使用hexo d写文章时，自动备份时用</span></div></pre></td></tr></table></figure></p>\n<p>另外，themes/next主题文件夹下的数据不会备份，若需备份，可删除该文件夹下的.git目录等信息再加入备份。</p>\n","excerpt":"<p>　　本文记录了两部分：hexo博客系统发布新文章时，自动备份托管到github；根据github上托管的项目，能够将最新的数据恢复到本地。自动备份详细技术原理可参考<a href=\"http://igeek.wang/2016/09/01/automatic-backup/#more\">文章</a>。</p>","more":"<h3 id=\"备份Hexo博客源文件\"><a href=\"#备份Hexo博客源文件\" class=\"headerlink\" title=\"备份Hexo博客源文件\"></a>备份Hexo博客源文件</h3><ul>\n<li><p>Github上新创建一个空的repo，取名hexo-next-blog用于远程仓库备份；进入本地博客源码的hexo文件夹，创建本地仓库：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git init</div></pre></td></tr></table></figure>\n</li>\n<li><p>设置远程仓库地址，并更新数据(第一次远程空仓库，无数据更新)：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote add origin git@github:XXX/hexo-next-blog.git</div><div class=\"line\">git pull origin master</div></pre></td></tr></table></figure>\n</li>\n<li><p>修改.gitignore文件，加入<em>.log, public/ 以及 deploy</em>/;</p>\n</li>\n<li><p>本地提交Hexo源码：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add .</div><div class=\"line\">git commit -m <span class=\"string\">\"hexo next blog数据备份\"</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>本地仓库数据推送github仓库:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push origin master</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"恢复Hexo博客源文件\"><a href=\"#恢复Hexo博客源文件\" class=\"headerlink\" title=\"恢复Hexo博客源文件\"></a>恢复Hexo博客源文件</h3><p>　　切换电脑后，安装node，git环境，配置github sshkey。<br>　　创建空目录hexo为工作目录，clone github上的repo：<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> git@github.com:xxx/hexo-next-blog.git</div></pre></td></tr></table></figure></p>\n<p>　　git clone成功后，安装hexo环境:<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo</div><div class=\"line\">npm install</div><div class=\"line\">npm install hexo-deployer-git</div><div class=\"line\">npm install --save shelljs   <span class=\"comment\"># 使用hexo d写文章时，自动备份时用</span></div></pre></td></tr></table></figure></p>\n<p>另外，themes/next主题文件夹下的数据不会备份，若需备份，可删除该文件夹下的.git目录等信息再加入备份。</p>"},{"title":"静态成员函数调用非静态成员变量","date":"2017-02-07T08:14:49.000Z","_content":"\n　　一般使用情况下，类静态成员函数调用静态成员变量，不能调用非静态变量，否则编译器会出错。因为非静态成员属于类对象，只有在类对象的实例创建时，才会分配内存，然后通过对象进行访问；而静态成员属于整个类，不需要类对象的创建，此时使用静态成员访问非静态成员好比访问内存中不存在的东西。\n\n<!--more -->\n　　静态成员调用静态成员的一般方法：\n\n```C++\n#include <iostream>\nusing namespace std;\n\nclass CStatic\n{\npublic:\n    static void Print()\n    {\n        cout<<m_iTest<<endl;\n    }\nprivate:\n    static int m_iTest; //此处为静态成员变量声明\n};\n\nint CStatic::m_iTest = 0; // 此处为定义，必须定义，否则编译出错。此处亦可用 int CStatic::m_iTest; 代替\n\nint main(int argc, char* argv[])\n{\n    CStatic cs;\n    cs.Print();\n    return 0;\n}\n```\n\n\n　　使用上述方式，有个问题，就是**需要对静态成员变量预先在类外定义，若成员变量个数较多，逐个定义起来比较麻烦**。此时，可使用静态成员调用非静态成员方法，[参见](http://www.cnblogs.com/rickyk/p/4238380.html)：\n\n```C++\n#include <iostream>\nusing namespace std;\n\nclass CStatic\n{\npublic:\n    CStatic()\n    {\n        m_iTest = 0;\n        s_pInstance = this;   // 构造函数初始化\n    }\n    static void Print()\n    {\n        s_pInstance->m_iTest += 1;  //\n        cout<<s_pInstance->m_iTest<<endl;\n    }\nprivate:\n    int m_iTest;\n    static CStatic* s_pInstance;\n};\nCStatic* CStatic::s_pInstance = NULL ;\nint main(int argc, char* argv[])\n{\n    CStatic cs;   // 已加载到内存，构造函数中有参数this进行初始化（相当于c语言先定义变量，再调用函数）\n    cs.Print();\n    CStatic cs1;\n    return 0;\n}\n\n```\n","source":"_posts/static-class-func-var.md","raw":"---\ntitle: 静态成员函数调用非静态成员变量\ndate: 2017-02-07 16:14:49\ntags: [c++, static]\ncategories: c++\n---\n\n　　一般使用情况下，类静态成员函数调用静态成员变量，不能调用非静态变量，否则编译器会出错。因为非静态成员属于类对象，只有在类对象的实例创建时，才会分配内存，然后通过对象进行访问；而静态成员属于整个类，不需要类对象的创建，此时使用静态成员访问非静态成员好比访问内存中不存在的东西。\n\n<!--more -->\n　　静态成员调用静态成员的一般方法：\n\n```C++\n#include <iostream>\nusing namespace std;\n\nclass CStatic\n{\npublic:\n    static void Print()\n    {\n        cout<<m_iTest<<endl;\n    }\nprivate:\n    static int m_iTest; //此处为静态成员变量声明\n};\n\nint CStatic::m_iTest = 0; // 此处为定义，必须定义，否则编译出错。此处亦可用 int CStatic::m_iTest; 代替\n\nint main(int argc, char* argv[])\n{\n    CStatic cs;\n    cs.Print();\n    return 0;\n}\n```\n\n\n　　使用上述方式，有个问题，就是**需要对静态成员变量预先在类外定义，若成员变量个数较多，逐个定义起来比较麻烦**。此时，可使用静态成员调用非静态成员方法，[参见](http://www.cnblogs.com/rickyk/p/4238380.html)：\n\n```C++\n#include <iostream>\nusing namespace std;\n\nclass CStatic\n{\npublic:\n    CStatic()\n    {\n        m_iTest = 0;\n        s_pInstance = this;   // 构造函数初始化\n    }\n    static void Print()\n    {\n        s_pInstance->m_iTest += 1;  //\n        cout<<s_pInstance->m_iTest<<endl;\n    }\nprivate:\n    int m_iTest;\n    static CStatic* s_pInstance;\n};\nCStatic* CStatic::s_pInstance = NULL ;\nint main(int argc, char* argv[])\n{\n    CStatic cs;   // 已加载到内存，构造函数中有参数this进行初始化（相当于c语言先定义变量，再调用函数）\n    cs.Print();\n    CStatic cs1;\n    return 0;\n}\n\n```\n","slug":"static-class-func-var","published":1,"updated":"2017-02-08T11:49:09.991Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cizfltmjl000h8wyvkau4c71q","content":"<p>　　一般使用情况下，类静态成员函数调用静态成员变量，不能调用非静态变量，否则编译器会出错。因为非静态成员属于类对象，只有在类对象的实例创建时，才会分配内存，然后通过对象进行访问；而静态成员属于整个类，不需要类对象的创建，此时使用静态成员访问非静态成员好比访问内存中不存在的东西。</p>\n<a id=\"more\"></a>\n<p>　　静态成员调用静态成员的一般方法：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">class</span> CStatic</div><div class=\"line\">&#123;</div><div class=\"line\"><span class=\"keyword\">public</span>:</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Print</span><span class=\"params\">()</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;m_iTest&lt;&lt;<span class=\"built_in\">endl</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"><span class=\"keyword\">private</span>:</div><div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> m_iTest; <span class=\"comment\">//此处为静态成员变量声明</span></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> CStatic::m_iTest = <span class=\"number\">0</span>; <span class=\"comment\">// 此处为定义，必须定义，否则编译出错。此处亦可用 int CStatic::m_iTest; 代替</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span>* argv[])</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    CStatic cs;</div><div class=\"line\">    cs.Print();</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>　　使用上述方式，有个问题，就是<strong>需要对静态成员变量预先在类外定义，若成员变量个数较多，逐个定义起来比较麻烦</strong>。此时，可使用静态成员调用非静态成员方法，<a href=\"http://www.cnblogs.com/rickyk/p/4238380.html\" target=\"_blank\" rel=\"external\">参见</a>：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">class</span> CStatic</div><div class=\"line\">&#123;</div><div class=\"line\"><span class=\"keyword\">public</span>:</div><div class=\"line\">    CStatic()</div><div class=\"line\">    &#123;</div><div class=\"line\">        m_iTest = <span class=\"number\">0</span>;</div><div class=\"line\">        s_pInstance = <span class=\"keyword\">this</span>;   <span class=\"comment\">// 构造函数初始化</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Print</span><span class=\"params\">()</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        s_pInstance-&gt;m_iTest += <span class=\"number\">1</span>;  <span class=\"comment\">//</span></div><div class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;s_pInstance-&gt;m_iTest&lt;&lt;<span class=\"built_in\">endl</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"><span class=\"keyword\">private</span>:</div><div class=\"line\">    <span class=\"keyword\">int</span> m_iTest;</div><div class=\"line\">    <span class=\"keyword\">static</span> CStatic* s_pInstance;</div><div class=\"line\">&#125;;</div><div class=\"line\">CStatic* CStatic::s_pInstance = <span class=\"literal\">NULL</span> ;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span>* argv[])</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    CStatic cs;   <span class=\"comment\">// 已加载到内存，构造函数中有参数this进行初始化（相当于c语言先定义变量，再调用函数）</span></div><div class=\"line\">    cs.Print();</div><div class=\"line\">    CStatic cs1;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"<p>　　一般使用情况下，类静态成员函数调用静态成员变量，不能调用非静态变量，否则编译器会出错。因为非静态成员属于类对象，只有在类对象的实例创建时，才会分配内存，然后通过对象进行访问；而静态成员属于整个类，不需要类对象的创建，此时使用静态成员访问非静态成员好比访问内存中不存在的东西。</p>","more":"<p>　　静态成员调用静态成员的一般方法：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">class</span> CStatic</div><div class=\"line\">&#123;</div><div class=\"line\"><span class=\"keyword\">public</span>:</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Print</span><span class=\"params\">()</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;m_iTest&lt;&lt;<span class=\"built_in\">endl</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"><span class=\"keyword\">private</span>:</div><div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> m_iTest; <span class=\"comment\">//此处为静态成员变量声明</span></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> CStatic::m_iTest = <span class=\"number\">0</span>; <span class=\"comment\">// 此处为定义，必须定义，否则编译出错。此处亦可用 int CStatic::m_iTest; 代替</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span>* argv[])</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    CStatic cs;</div><div class=\"line\">    cs.Print();</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>　　使用上述方式，有个问题，就是<strong>需要对静态成员变量预先在类外定义，若成员变量个数较多，逐个定义起来比较麻烦</strong>。此时，可使用静态成员调用非静态成员方法，<a href=\"http://www.cnblogs.com/rickyk/p/4238380.html\">参见</a>：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">class</span> CStatic</div><div class=\"line\">&#123;</div><div class=\"line\"><span class=\"keyword\">public</span>:</div><div class=\"line\">    CStatic()</div><div class=\"line\">    &#123;</div><div class=\"line\">        m_iTest = <span class=\"number\">0</span>;</div><div class=\"line\">        s_pInstance = <span class=\"keyword\">this</span>;   <span class=\"comment\">// 构造函数初始化</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Print</span><span class=\"params\">()</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        s_pInstance-&gt;m_iTest += <span class=\"number\">1</span>;  <span class=\"comment\">//</span></div><div class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;s_pInstance-&gt;m_iTest&lt;&lt;<span class=\"built_in\">endl</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"><span class=\"keyword\">private</span>:</div><div class=\"line\">    <span class=\"keyword\">int</span> m_iTest;</div><div class=\"line\">    <span class=\"keyword\">static</span> CStatic* s_pInstance;</div><div class=\"line\">&#125;;</div><div class=\"line\">CStatic* CStatic::s_pInstance = <span class=\"literal\">NULL</span> ;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span>* argv[])</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    CStatic cs;   <span class=\"comment\">// 已加载到内存，构造函数中有参数this进行初始化（相当于c语言先定义变量，再调用函数）</span></div><div class=\"line\">    cs.Print();</div><div class=\"line\">    CStatic cs1;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"}],"PostAsset":[{"_id":"source/_posts/dns/abc0000000004.png","slug":"abc0000000004.png","post":"cizfltmjd000c8wyvis6ju8qd","modified":0,"renderable":0},{"_id":"source/_posts/dns/abc0000000003.png","slug":"abc0000000003.png","post":"cizfltmjd000c8wyvis6ju8qd","modified":0,"renderable":0},{"_id":"source/_posts/yr-rules-scan-proc/abc0000000006.png","slug":"abc0000000006.png","post":"cizfltmj300088wyvjvnvm407","modified":0,"renderable":0},{"_id":"source/_posts/dns/abc0000000000.png","slug":"abc0000000000.png","post":"cizfltmjd000c8wyvis6ju8qd","modified":0,"renderable":0},{"_id":"source/_posts/dns/abc0000000001.png","slug":"abc0000000001.png","post":"cizfltmjd000c8wyvis6ju8qd","modified":0,"renderable":0},{"_id":"source/_posts/dns/abc0000000002.png","slug":"abc0000000002.png","post":"cizfltmjd000c8wyvis6ju8qd","modified":0,"renderable":0},{"_id":"source/_posts/dns/abc0000000005.png","slug":"abc0000000005.png","post":"cizfltmjd000c8wyvis6ju8qd","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cizfltmhy00008wyvvqittp5i","category_id":"cizfltmid00048wyviz42gpxs","_id":"cizfltmjf000d8wyvihy8ml74"},{"post_id":"cizfltmi600028wyva4po3noz","category_id":"cizfltmj9000a8wyvzy76k6uz","_id":"cizfltmjn000i8wyvbpydcx9c"},{"post_id":"cizfltmix00068wyv5ymi85gu","category_id":"cizfltmjj000f8wyvjvpc0dtn","_id":"cizfltmjp000m8wyvmirle54r"},{"post_id":"cizfltmj300088wyvjvnvm407","category_id":"cizfltmjn000j8wyvz9i9h51u","_id":"cizfltmjr000r8wyvbsdacphr"},{"post_id":"cizfltmjd000c8wyvis6ju8qd","category_id":"cizfltmjp000o8wyvnv0mm5mk","_id":"cizfltmju000v8wyvyxoqwc3m"},{"post_id":"cizfltmjg000e8wyvnpy0ch4p","category_id":"cizfltmjs000s8wyvehdzaexp","_id":"cizfltmjv000z8wyvf0sowljt"},{"post_id":"cizfltmjl000h8wyvkau4c71q","category_id":"cizfltmju000x8wyvigf121wz","_id":"cizfltmjx00118wyv17ch0zyl"}],"PostTag":[{"post_id":"cizfltmhy00008wyvvqittp5i","tag_id":"cizfltmiw00058wyvzjn8jina","_id":"cizfltmjo000l8wyvq7wwm9z4"},{"post_id":"cizfltmhy00008wyvvqittp5i","tag_id":"cizfltmj9000b8wyvg62m22qa","_id":"cizfltmjp000n8wyvhsvp8dwg"},{"post_id":"cizfltmhy00008wyvvqittp5i","tag_id":"cizfltmjj000g8wyv1v7ng2kk","_id":"cizfltmjq000q8wyvhq1z9afe"},{"post_id":"cizfltmi600028wyva4po3noz","tag_id":"cizfltmjo000k8wyvewa8a0ab","_id":"cizfltmjt000u8wyvrd79xf7q"},{"post_id":"cizfltmi600028wyva4po3noz","tag_id":"cizfltmjq000p8wyv9ktv0tyz","_id":"cizfltmju000w8wyvik2ih79y"},{"post_id":"cizfltmix00068wyv5ymi85gu","tag_id":"cizfltmjs000t8wyvc0ckq751","_id":"cizfltmjy00138wyvuc7wsy7a"},{"post_id":"cizfltmix00068wyv5ymi85gu","tag_id":"cizfltmjv000y8wyv3vk3obvw","_id":"cizfltmjz00148wyvj3yny54u"},{"post_id":"cizfltmix00068wyv5ymi85gu","tag_id":"cizfltmjw00108wyvcyubg3iq","_id":"cizfltmk000168wyv35nhk5di"},{"post_id":"cizfltmj300088wyvjvnvm407","tag_id":"cizfltmjx00128wyvwsrraua4","_id":"cizfltmk6001a8wyvqjap8orh"},{"post_id":"cizfltmj300088wyvjvnvm407","tag_id":"cizfltmjz00158wyv5ysekj3v","_id":"cizfltmk7001b8wyvsyyv8ji7"},{"post_id":"cizfltmj300088wyvjvnvm407","tag_id":"cizfltmk100178wyva78uwxuf","_id":"cizfltmk8001d8wyvtdwp4ven"},{"post_id":"cizfltmj300088wyvjvnvm407","tag_id":"cizfltmk200188wyvr1pwzf8b","_id":"cizfltmk8001e8wyv46sy2i8e"},{"post_id":"cizfltmjd000c8wyvis6ju8qd","tag_id":"cizfltmk400198wyv5ymmcl4a","_id":"cizfltmk9001g8wyvlrgvnhf9"},{"post_id":"cizfltmjd000c8wyvis6ju8qd","tag_id":"cizfltmk7001c8wyvnmsnmj80","_id":"cizfltmka001h8wyv60ix0vfe"},{"post_id":"cizfltmjg000e8wyvnpy0ch4p","tag_id":"cizfltmk8001f8wyv0ytjqz83","_id":"cizfltmkc001j8wyvagbs10m1"},{"post_id":"cizfltmjl000h8wyvkau4c71q","tag_id":"cizfltmkb001i8wyv3ilu1c1s","_id":"cizfltmke001l8wyv9rpk2i3r"},{"post_id":"cizfltmjl000h8wyvkau4c71q","tag_id":"cizfltmkd001k8wyv6mcro6m1","_id":"cizfltmkf001m8wyveapjyu95"}],"Tag":[{"name":"linux","_id":"cizfltmiw00058wyvzjn8jina"},{"name":"shell","_id":"cizfltmj9000b8wyvg62m22qa"},{"name":"attack","_id":"cizfltmjj000g8wyv1v7ng2kk"},{"name":"c","_id":"cizfltmjo000k8wyvewa8a0ab"},{"name":"macro","_id":"cizfltmjq000p8wyv9ktv0tyz"},{"name":"svm","_id":"cizfltmjs000t8wyvc0ckq751"},{"name":"math","_id":"cizfltmjv000y8wyv3vk3obvw"},{"name":"machine learning","_id":"cizfltmjw00108wyvcyubg3iq"},{"name":"C","_id":"cizfltmjx00128wyvwsrraua4"},{"name":"yara","_id":"cizfltmjz00158wyv5ysekj3v"},{"name":"proc","_id":"cizfltmk100178wyva78uwxuf"},{"name":"api","_id":"cizfltmk200188wyvr1pwzf8b"},{"name":"dns","_id":"cizfltmk400198wyv5ymmcl4a"},{"name":"domain","_id":"cizfltmk7001c8wyvnmsnmj80"},{"name":"hexo","_id":"cizfltmk8001f8wyv0ytjqz83"},{"name":"c++","_id":"cizfltmkb001i8wyv3ilu1c1s"},{"name":"static","_id":"cizfltmkd001k8wyv6mcro6m1"}]}}